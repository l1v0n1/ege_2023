'''
Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может убрать из одной из куч один камень или уменьшить количество камней в куче в два раза (если количество камней в куче нечётно, остаётся на 1 камень меньше, чем убирается).
Игра завершается в тот момент, когда суммарное количество камней в кучах становится не более 20. Победителем считается игрок, сделавший последний ход, то есть первым получивший позицию, в которой в кучах будет 20 или меньше камней.
В начальный момент в первой куче было 10 камней, во второй куче — S камней, S > 10.
19) Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. Укажите максимальное значение S, когда такая ситуация возможна.
20) Найдите пять таких значений S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
— Петя не может выиграть за один ход;
— Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания без разделительных знаков.
21) Найдите максимальное значение S, при котором одновременно выполняются два условия:
— у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
— у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
'''
#19
def f(x, y, p):
    if x + y <= 20 and p == 2:
        return True
    else:
        if x + y > 20 and p == 2:
            return False
    return f(x - 1, y, p + 1) or f(x // 2, y, p + 1) or \
        f(x, y - 1, p + 1) or f(x, y // 2, p + 1)


print(max([i for i in range(100, 1, -1) if f(10, i, 0)]))
#20
def f(x, y, p):
    if x + y <= 20 or p > 3:
        return p == 3
    if p % 2:
        return f(x - 1, y, p + 1) and f(x // 2, y, p + 1) and \
               f(x, y - 1, p + 1) and f(x, y // 2, p + 1)
    else:
        return f(x - 1, y, p + 1) or f(x // 2, y, p + 1) or \
        f(x, y - 1, p + 1) or f(x, y // 2, p + 1)


print(sorted([i for i in range(100, 1, -1) if f(10, i, 0)]))
#21
def f(x, y, p):
    if x + y <= 20 and (p == 2 or p == 4):
        return True
    else:
        if x + y > 20 and p == 4:
            return False
        else:
            if x + y <= 20:
                return False
    if p % 2 == 0:
        return f(x - 1, y, p + 1) and f(x // 2, y, p + 1) and \
               f(x, y - 1, p + 1) and f(x, y // 2, p + 1)
    else:
        return f(x - 1, y, p + 1) or f(x // 2, y, p + 1) or \
        f(x, y - 1, p + 1) or f(x, y // 2, p + 1)


print(max([i for i in range(100, 1, -1) if f(10, i, 0)]))